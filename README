PyVO is a package providing access to remote data and services of the
Virtual observatory (VO) using Python.

Its development was launched by NSF/NASA-funded Virtual Astronomical
Observatory (VAO, www.usvao.org) project (formerly under the name
VAOpy) as part of its initiative to bring VO capabilities to desktop.
Its goal is allow astronomers and tool developers to access data and
services from remote archives and other web resources.  It takes
advantage VO standards to give access to thousands of catalogs,
data archives, information services, and analysis tools.  It also
takes advantage of the general capabilities of Astopy (and numpy), and
so a secondary goal is to provide a development platform for migrating
more VO capabilities into Astropy. 

Information about this package, including latest releases, can be
found at:

  http://dev.usvao.org/vao/wiki/Products/PyVO

Source code can be found on GitHub at:

  http://github.com/pyvirtobs/pyvo

This implementation requires the following prerequisite packagss:

  o  numpy (1.6.0 or later)
  o  astropy (0.2 - later versions have a different vo interface)

Currently in this pre-release state, disttool support (or the like) is
not yet supported.  To use, one should set the PYTHONPATH variable to
the location of the "python" directory containing the source code
(i.e. below the directory containing this README).  If the
prerequisites were not installed in the standard python module areas,
these must be included in the PYTHONPATH as well.

UNIT TESTS

Unit tests are contained in the tests subdirectory.  To run a
particular unit test script, type:

   python tests/path-to-script.py

For example:

   python tests/dal/testSIA.py

If the script contains the string "NeedsNet" in its name, it requirs
access to the network to work properly.  All other files do not
require the network, working off of local input files our local
services executed locally on-the-fly.  

A few files aggregate the running of tests from several individual
unit test files.  In particular:

  testNoNet.py -- runs all unit tests that do not require access to
                  the network to work.  
  testNeedsNet.py -- all tests that require the network to work in
                  order to complete.  

